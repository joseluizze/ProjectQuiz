q1=What is the code for displaying a message on the screen or console, whose text is: Hello Word !?
q1a=d
a1a=String.in.print(“Hello World!”);
a1b=priteln(“Hello World!”);
a1c=System.out.println(Hello World!);
a1d=System.out.println("Hello World!");

q2=which abreviation the intellige provide for the method call System.out.println?
q2a=b
a2a=write and the enter key .
a2b=sout and the enter key.
a2c=shift and alt and F1 key.
a2d=println.

q3=What is the name of the method which is first called upon programm execution?
q3a=a
a3a=main and the writing of this line will be -> public static void main (String [] args) {
a3b=equals and the writing of this line will be -> public static void equals (String [] args) {
a3c=Int and the writing of this line will be -> public static int abs (int x) {
a3d=double and the writing of this line will be -> private double bill;

q4=According to Wikipedia, IDE, Integrated Development Environment, is a computer program\nthat gathers features and support tools for software development to streamline this process.\nStreamlining means being able to simulate the writing\nand application of the computational code we are currently building.\nIt is possible to develop Java applications across various development environments.\nCheck the option where all environments belong to the Java language.
q4a=c
a4a=Idle; PyCharm community; Komodo-Edit.
a4b=XCode; Idle; CDT.
a4c=Eclipse; Netbeans; Intellij IDEA.
a4d=CDT; Eclipse; Idle.

q5=When we want to comment a code\nand we don't want this line or lines to be executed,\nie when running the program and these lines are ignored, we use:
q5a=a
a5a=two slashes "//" for each line you want to comment and ignore. Single line comment.\nAnother way is the multiline comment where we use / * and * /\nwhere / * starts the comment and * / ends the comment on the last line,\nencompassing the ignored lines.
a5b=semicolon; valid to mark each line to be ignored and // two slashes as multi-line comment.
a5c=slash and star / * and * / valid for each line you want to comment\nand ignore and two slashes // as a multiline comment where // starts the comment\nand // ends the comment on the last line, enclosing the ignored lines.
a5d=two valid // slashes for each line to comment and ignore. Single line comment.\nAnother way is multi-line comment, where we use an open brace { where the comment starts\nand } a closed brace that ends the comment on the last line, encompassing the ignored lines.

q6=Every block of code (method, loop, class, ...) is encapsulated by which synbols?
q6a=b
a6a=semicolon;
a6b=braces {}.
a6c=bars //.
a6d=parenthesis ().

q7=class names are one of the first Java language\n conventions we learned. By convention:
q7a=b
a7a=every class should start with an uppercase letter and preferably\ncontain Latin language characters such as accented characters.\n You can declare a class with any special character \n(@, #, $,%, &, *, _, etc ...) or number.
a7b=every class should start with an uppercase letter\n and preferably should contain Latin language characters\n without accented characters. \nTherefore, it is not possible to declare a class\n with any special character (@, #, $,%, &, *, _, etc ...) or number.
a7c=every class should start with a lowercase letter and preferably\n cannot contain Latin language characters such as accented\n characters. Therefore, it is possible to declare a class\n with any special character (@, #, $,%, &, *, _, etc ...) or number.
a7d=every class should start with an uppercase letter\n and preferably cannot contain letters of Latin language characters\n such as accented characters).\nTherefore, it is not possible to declare a class\n without any special characters (@, #, $,%, &, *, _, etc ...) or number.

q8=name of attributes or variables can start: 
q8a=a
a8a=with any letter and the characters $\n or _, but cannot start with numbers. 
a8b=with any number, any letter or character #. 
a8=If the name of an attribute (variable)\n consists of more than one word,\n the first letter of each word must be lowercase. 
a8d=any number, any letter but no characters %.\n

q9=What is a class?
q9a=c
a9a=are the instances created by the objects and that represent the concrete part of the programming.\n Objects are abstractions of classes.
a9b=are the combination of unique data and working procedures on certain singular data.\n The state of a class is evaluated in fields\n and the methods refer to the behavior of the classes.
a9c=Blueprint, template or prototype that defines and describes the static attributes\n and dynamics behaviors common to all objects of the same kind.
a9d=A class is the instance of an object.

q10=What is an object?
q10a=a
a10a=An object is a combination of data and procedures working on\n the available data. An object has a state and behavior. \nThe state of an object is stored in fields,\n while methods display the objects behavior.\n Objects are created from known templates as classes.
a10b=A class is the instance of an object.
a10c=An object is a group of similar classes.
a10d=Blueprint, template or prototype that defines and describes\n the static attributes and dynamics behaviors\n common to all objects of the same kind.

